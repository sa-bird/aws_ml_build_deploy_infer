{
  "service": {
    "service": "snf-demo-batchmode-204009636635",
    "serviceObject": {
      "name": "snf-demo-batchmode-204009636635"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.7",
      "region": "us-west-2",
      "stage": "dev",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "sagemaker:CreateTrainingJob",
            "sagemaker:CreateEndpointConfig",
            "sagemaker:CreateTransformJob",
            "sagemaker:CreateEndpoint",
            "sagemaker:CreateModel",
            "sagemaker:InvokeEndpoint"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "iam:PassRole"
          ],
          "Resource": "*",
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": "sagemaker.amazonaws.com"
            }
          }
        }
      ],
      "resourcePolicy": [
        {
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "arn:aws:sts::204009636635:assumed-role/Snowflake_External_Function_Role_Name/snowflake"
            ]
          },
          "Action": "execute-api:Invoke",
          "Resource": [
            "execute-api:/*/*/*"
          ]
        }
      ],
      "environment": {
        "region": "us-west-2",
        "stage": "dev",
        "s3_bucket": "sagemaker-snf-demo-batchmode-204009636635",
        "training_image_ecr_path": "204009636635.dkr.ecr.us-west-2.amazonaws.com/recommender_batch_mode",
        "sagemaker_role_arn": "arn:aws:iam::204009636635:role/sagemaker_execution_ds_role",
        "training_instance_type": "ml.m5.large",
        "training_instance_count": "1",
        "training_volume_size_gb": "10",
        "transform_instance_type": "ml.m5.large",
        "transform_instance_count": "1",
        "transform_volume_size_gb": "10",
        "container_type": "custom",
        "data_prefix": "/data/",
        "input_dir": "input/",
        "output_dir": "output/"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "TrainUnderscoreandUnderscoredeployLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/snf-demo-batchmode-204009636635-dev-train_and_deploy"
            }
          },
          "InvokeUnderscoremodelLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/snf-demo-batchmode-204009636635-dev-invoke_model"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "snf-demo-batchmode-204009636635",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/snf-demo-batchmode-204009636635-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/snf-demo-batchmode-204009636635-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "snf-demo-batchmode-204009636635",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "TrainUnderscoreandUnderscoredeployLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/snf-demo-batchmode-204009636635/dev/1648512394049-2022-03-29T00:06:34.049Z/snf-demo-batchmode-204009636635.zip"
              },
              "Handler": "handler.aws_job",
              "Runtime": "python3.7",
              "FunctionName": "snf-demo-batchmode-204009636635-dev-train_and_deploy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "region": "us-west-2",
                  "stage": "dev",
                  "s3_bucket": "sagemaker-snf-demo-batchmode-204009636635",
                  "training_image_ecr_path": "204009636635.dkr.ecr.us-west-2.amazonaws.com/recommender_batch_mode",
                  "sagemaker_role_arn": "arn:aws:iam::204009636635:role/sagemaker_execution_ds_role",
                  "training_instance_type": "ml.m5.large",
                  "training_instance_count": "1",
                  "training_volume_size_gb": "10",
                  "transform_instance_type": "ml.m5.large",
                  "transform_instance_count": "1",
                  "transform_volume_size_gb": "10",
                  "container_type": "custom",
                  "data_prefix": "/data/",
                  "input_dir": "input/",
                  "output_dir": "output/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "TrainUnderscoreandUnderscoredeployLogGroup"
            ]
          },
          "InvokeUnderscoremodelLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/snf-demo-batchmode-204009636635/dev/1648512394049-2022-03-29T00:06:34.049Z/snf-demo-batchmode-204009636635.zip"
              },
              "Handler": "handler.generate_batch_predictions",
              "Runtime": "python3.7",
              "FunctionName": "snf-demo-batchmode-204009636635-dev-invoke_model",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "region": "us-west-2",
                  "stage": "dev",
                  "s3_bucket": "sagemaker-snf-demo-batchmode-204009636635",
                  "training_image_ecr_path": "204009636635.dkr.ecr.us-west-2.amazonaws.com/recommender_batch_mode",
                  "sagemaker_role_arn": "arn:aws:iam::204009636635:role/sagemaker_execution_ds_role",
                  "training_instance_type": "ml.m5.large",
                  "training_instance_count": "1",
                  "training_volume_size_gb": "10",
                  "transform_instance_type": "ml.m5.large",
                  "transform_instance_count": "1",
                  "transform_volume_size_gb": "10",
                  "container_type": "custom",
                  "data_prefix": "/data/",
                  "input_dir": "input/",
                  "output_dir": "output/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "InvokeUnderscoremodelLogGroup"
            ]
          },
          "TrainUnderscoreandUnderscoredeployLambdaVersionoR0ruTo7P24vEe5NsOr9izG97DPzDqLBjA86p9FE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TrainUnderscoreandUnderscoredeployLambdaFunction"
              },
              "CodeSha256": "6kDG9xB2seMFX0f5XxFws3RewIclnUCUHy2Tck9xOCY="
            }
          },
          "InvokeUnderscoremodelLambdaVersionmIopTtOBrlgrvMzohfB1jcF7PEvmNVfLWwHLiefhEIY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "InvokeUnderscoremodelLambdaFunction"
              },
              "CodeSha256": "6kDG9xB2seMFX0f5XxFws3RewIclnUCUHy2Tck9xOCY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-snf-demo-batchmode-204009636635",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceTrain": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "train",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceInvoke": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "invoke",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodTrainPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTrain"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "AWS_IAM",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "TrainUnderscoreandUnderscoredeployLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "TrainUnderscoreandUnderscoredeployLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodInvokePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceInvoke"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "AWS_IAM",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "InvokeUnderscoremodelLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "InvokeUnderscoremodelLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1648512393515": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodTrainPost",
              "ApiGatewayMethodInvokePost"
            ]
          },
          "TrainUnderscoreandUnderscoredeployLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TrainUnderscoreandUnderscoredeployLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "InvokeUnderscoremodelLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "InvokeUnderscoremodelLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "AccessControl": "Private",
              "BucketName": "sagemaker-snf-demo-batchmode-204009636635"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-snf-demo-batchmode-204009636635-dev-ServerlessDeploymentBucketName"
            }
          },
          "TrainUnderscoreandUnderscoredeployLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TrainUnderscoreandUnderscoredeployLambdaVersionoR0ruTo7P24vEe5NsOr9izG97DPzDqLBjA86p9FE"
            },
            "Export": {
              "Name": "sls-snf-demo-batchmode-204009636635-dev-TrainUnderscoreandUnderscoredeployLambdaFunctionQualifiedArn"
            }
          },
          "InvokeUnderscoremodelLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "InvokeUnderscoremodelLambdaVersionmIopTtOBrlgrvMzohfB1jcF7PEvmNVfLWwHLiefhEIY"
            },
            "Export": {
              "Name": "sls-snf-demo-batchmode-204009636635-dev-InvokeUnderscoremodelLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-snf-demo-batchmode-204009636635-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "train_and_deploy": {
        "handler": "handler.aws_job",
        "events": [
          {
            "http": {
              "path": "train",
              "method": "post",
              "authorizer": {
                "type": "AWS_IAM",
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "snf-demo-batchmode-204009636635-dev-train_and_deploy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "TrainUnderscoreandUnderscoredeployLambdaVersionoR0ruTo7P24vEe5NsOr9izG97DPzDqLBjA86p9FE"
      },
      "invoke_model": {
        "handler": "handler.generate_batch_predictions",
        "events": [
          {
            "http": {
              "path": "invoke",
              "method": "post",
              "authorizer": {
                "type": "AWS_IAM",
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "snf-demo-batchmode-204009636635-dev-invoke_model",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "InvokeUnderscoremodelLambdaVersionmIopTtOBrlgrvMzohfB1jcF7PEvmNVfLWwHLiefhEIY"
      }
    },
    "resources": {
      "Resources": {
        "S3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "AccessControl": "Private",
            "BucketName": "sagemaker-snf-demo-batchmode-204009636635"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "snf-demo-batchmode-204009636635",
      "frameworkVersion": ">=1.2.0 <4.0.0",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "artifact": "/Users/srinivas/Documents/GitHub/aws_ml_build_deploy_infer/sls/.serverless/snf-demo-batchmode-204009636635.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/snf-demo-batchmode-204009636635/dev/1648512394049-2022-03-29T00:06:34.049Z",
    "artifact": "snf-demo-batchmode-204009636635.zip"
  }
}