service: snf-demo-batchmode-${file(./config.${self:provider.stage}.yml):unique_id}

frameworkVersion: ">=1.2.0 <4.0.0"

provider:
  name: aws
  runtime: python3.7
  region: ${file(./config.${self:provider.stage}.yml):region}
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sagemaker:CreateTrainingJob"
        - "sagemaker:CreateEndpointConfig"
        - "sagemaker:CreateEndpoint"
        - "sagemaker:CreateModel"
        - "sagemaker:InvokeEndpoint"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "iam:PassRole"
      Resource: "*"
      Condition:
        StringEquals:
          iam:PassedToService: "sagemaker.amazonaws.com"
  resourcePolicy:
    - Effect: Allow
      Principal:
        AWS: 
        - ${file(./config.${self:provider.stage}.yml):snf_ef_role_principal}
      Action: execute-api:Invoke
      Resource:
        - execute-api:/*/*/*

  environment:
    region: ${self:provider.region}
    stage: ${self:provider.stage}
    s3_bucket: sagemaker-${self:service} 
    training_image_ecr_path: ${file(./config.${self:provider.stage}.yml):training_image_ecr_path}
    sagemaker_role_arn: ${file(./config.${self:provider.stage}.yml):sagemaker_role_arn}
    training_instance_type: ${file(./config.${self:provider.stage}.yml):training_instance_type}
    training_instance_count: ${file(./config.${self:provider.stage}.yml):training_instance_count}
    training_volume_size_gb: ${file(./config.${self:provider.stage}.yml):training_volume_size_gb}
    transform_instance_type: ${file(./config.${self:provider.stage}.yml):transform_instance_type}
    transform_instance_count: ${file(./config.${self:provider.stage}.yml):transform_instance_count}
    transform_volume_size_gb: ${file(./config.${self:provider.stage}.yml):transform_volume_size_gb}
    container_type: ${file(./config.${self:provider.stage}.yml):container_type}
    data_prefix: ${file(./config.${self:provider.stage}.yml):data_prefix}
    input_dir: ${file(./config.${self:provider.stage}.yml):input_dir}
    output_dir: ${file(./config.${self:provider.stage}.yml):output_dir}

functions:
  train_and_deploy:
    handler: handler.aws_job
    events:
      - http:
          path: train
          method: post
          authorizer: aws_iam

  invoke_model:
    handler: handler.generate_batch_predictions
    events:
      - http:
          path: invoke
          method: post
          authorizer: aws_iam

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket 
      Properties:
        AccessControl: Private
        BucketName: sagemaker-${self:service}
